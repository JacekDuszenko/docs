"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[62847],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(u,".").concat(f)]||d[f]||c[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},64376:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={},o=void 0,l={type:"mdx",permalink:"/changelog/reviewpad-v340-faro-edition",source:"@site/src/pages/changelog/reviewpad-v340-faro-edition.md",description:"New features",frontMatter:{}},u=[{value:"New features \ud83d\udd25",id:"new-features-",level:2},{value:"Reviewpad",id:"reviewpad",level:3},{value:"Aladino Language",id:"aladino-language",level:3},{value:"Aladino Built-ins",id:"aladino-built-ins",level:3},{value:"Functions",id:"functions",level:3},{value:"Actions",id:"actions",level:3},{value:"Improvements \ud83d\ude80",id:"improvements",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"new-features-"},"New features \ud83d\udd25"),(0,a.kt)("h3",{id:"reviewpad"},"Reviewpad"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Feature: Extends cron job for issues and pull requests. Check the ",(0,a.kt)("a",{parentName:"li",href:"/use-cases/stale-issues-or-pull-requests"},"stale pull request/issue use case"),".")),(0,a.kt)("h3",{id:"aladino-language"},"Aladino Language"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/guides/aladino/syntax"},"Lambda expressions")," - Aladino now supports lambda functions."),(0,a.kt)("h3",{id:"aladino-built-ins"},"Aladino Built-ins"),(0,a.kt)("h3",{id:"functions"},"Functions"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/guides/built-ins#addtoproject"},(0,a.kt)("inlineCode",{parentName:"a"},"addToProject"))," - Adds a pull request to a project with a particular status. It is not supported for GitHub issues.\n",(0,a.kt)("a",{parentName:"p",href:"/guides/built-ins#issuecountby"},(0,a.kt)("inlineCode",{parentName:"a"},"issueCountBy"))," - Returns the total number of issues created by the given GitHub user and issue state.\n",(0,a.kt)("a",{parentName:"p",href:"/guides/built-ins#pullrequestcountby"},(0,a.kt)("inlineCode",{parentName:"a"},"pullRequestCountBy"))," - Returns the total number of pull requests created by the given GitHub user and state."),(0,a.kt)("h3",{id:"actions"},"Actions"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/guides/built-ins#titlelint"},(0,a.kt)("inlineCode",{parentName:"a"},"titleLint"))," - Checks if the pull request title follows the ",(0,a.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"conventional commits specification"),"."),(0,a.kt)("h2",{id:"improvements"},"Improvements \ud83d\ude80"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Fix ",(0,a.kt)("inlineCode",{parentName:"li"},"issue_comment")," event handling to support GitHub issues and pull requests.")))}p.isMDXComponent=!0}}]);