"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3650],{63681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>f,frontMatter:()=>r,metadata:()=>u,toc:()=>d});var i=n(87462),a=(n(67294),n(3905)),o=n(90814);const s='# This file is used to configure Reviewpad.\n# The configuration is a proposal to help you get started.\n# You can use it as a starting point and customize it to your needs.\n# For more details see https://docs.reviewpad.com/guides/syntax.\n\n# Define the list of labels to be used by Reviewpad.\n# For more details see https://docs.reviewpad.com/guides/syntax#label.\nlabels:\n  small:\n    description: Pull request is small\n    color: "#76dbbe"\n  medium:\n    description: Pull request is medium\n    color: "#2986cc"\n  large:\n    description: Pull request is large\n    color: "#c90076"\n\n# Define the list of workflows to be run by Reviewpad.\n# A workflow is a list of actions that will be executed based on the defined rules.\n# For more details see https://docs.reviewpad.com/guides/syntax#workflow.\nworkflows:\n  # This workflow calls Reviewpad AI agent to summarize the pull request.\n  - name: summarize\n    description: Summarize the pull request\n    run:\n      # Summarize the pull request on pull request synchronization.\n      - if: ($eventType() == "synchronize" || $eventType() == "opened") && $state() == "open"\n        then: $summarize()\n\n  # This workflow assigns the most relevant reviewer to pull requests.\n  # This helps guarantee that most pull requests are reviewed by at least one person.\n  - name: reviewer-assignment\n    description: Assign the most relevant reviewer to pull requests\n    run:\n      # Automatically assign reviewer when the pull request is ready for review;\n      - if: $isDraft() == false\n        then: $assignCodeAuthorReviewers()\n\n  # This workflow praises contributors on their pull request contributions.\n  # This helps contributors feel appreciated.\n  - name: praise-contributors-on-milestones\n    description: Praise contributors based on their contributions\n    run:\n      # Praise contributors on their first pull request.\n      - if: $pullRequestCountBy($author()) == 1\n        then: $commentOnce($sprintf("Thank you @%s for this first contribution!", [$author()]))\n\n  # This workflow validates that pull requests follow the conventional commits specification.\n  # This helps developers automatically generate changelogs.\n  # For more details, see https://www.conventionalcommits.org/en/v1.0.0/.\n  - name: check-conventional-commits\n    description: Validate that pull requests follow the conventional commits\n    run:\n      - if: $isDraft() == false\n        then:\n          # Check commits messages against the conventional commits specification\n          - $commitLint()\n          # Check pull request title against the conventional commits specification.\n          - $titleLint()\n\n  # This workflow validates best practices for pull request management.\n  # This helps developers follow best practices.\n  - name: best-practices\n    description: Validate best practices for pull request management\n    run:\n      # Warn pull requests that do not have an associated GitHub issue.\n      - if: $hasLinkedIssues() == false\n        then: $warn("Please link an issue to the pull request")\n      # Warn pull requests if their description is empty.\n      - if: $description() == ""\n        then: $warn("Please provide a description for the pull request")\n      # Warn pull request do not have a clean linear history.\n      - if: $hasLinearHistory() == false\n        then: $warn("Please rebase your pull request on the latest changes")\n\n  # This workflow labels pull requests based on the total number of lines changed.\n  # This helps pick pull requests based on their size and to incentivize small pull requests.\n  - name: size-labeling\n    description: Label pull request based on the number of lines changed\n    run:\n      - if: $size() < 100\n        then: $addLabel("small")\n        else: $removeLabel("small")\n      - if: $size() >= 100 && $size() < 300\n        then: $addLabel("medium")\n        else: $removeLabel("medium")\n      - if: $size() >= 300\n        then: $addLabel("large")\n        else: $removeLabel("large")\n\n  # This workflow signals pull requests waiting for reviews.\n  # This helps guarantee that pull requests are reviewed and approved by at least one person.\n  - name: check-approvals\n    description: Check that pull requests have the required number of approvals\n    run:\n      # Label pull requests with `waiting-for-review` if there are no approvals;\n      - if: $isDraft() == false && $approvalsCount() < 1\n        then: $addLabel("waiting-for-review")\n\n  # This workflow labels pull requests based on the pull request change type.\n  # This helps pick pull requests based on their change type.\n  - name: change-type-labelling\n    description: Label pull requests based on the type of changes\n    run:\n      # Label pull requests with `docs` if they only modify Markdown or txt files.\n      - if: $hasFileExtensions([".md", ".txt"])\n        then: $addLabel("docs")\n        else: $removeLabel("docs")\n      # Label pull requests with `infra` if they modify Terraform files.\n      - if: $hasFileExtensions([".tf"])\n        then: $addLabel("infra")\n        else: $removeLabel("infra")\n      # Label pull requests with `dependencies` if they only modify `package.json` and `package.lock` files.\n      - if: $hasFileExtensions(["package.json", "package-lock.json"])\n        then: $addLabel("dependencies")\n        else: $removeLabel("dependencies")\n\n  # This workflow validates that pull requests do not contain changes to the license.\n  # This helps avoid unwanted license modifications.\n  - name: license-validation\n    description: Validate that licenses are not modified\n    run:\n      # Fail Reviewpad check on pull requests that modify any LICENSE;\n      - if: $hasFilePattern("**/LICENSE*")\n        then: $fail("License files cannot be modified")\n\n',r={title:"Configuration",id:"configuration",slug:"configuration"},l=void 0,u={unversionedId:"getting-started/configuration",id:"getting-started/configuration",title:"Configuration",description:"For Reviewpad to work, it needs a configuration file called reviewpad.yml in the root of your repository.",source:"@site/docs/getting-started/configuration.mdx",sourceDirName:"getting-started",slug:"/getting-started/configuration",permalink:"/next/getting-started/configuration",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/getting-started/configuration.mdx",tags:[],version:"current",frontMatter:{title:"Configuration",id:"configuration",slug:"configuration"},sidebar:"DocsSidebar",previous:{title:"Installation",permalink:"/next/getting-started/installation"},next:{title:"Playground",permalink:"/next/getting-started/playground"}},p={},d=[{value:"Accept the onboarding pull request",id:"accept-the-onboarding-pull-request",level:2},{value:"Didn&#39;t get the onboarding pull request?",id:"didnt-get-the-onboarding-pull-request",level:3},{value:"Create the Reviewpad configuration file manually",id:"create-the-reviewpad-configuration-file-manually",level:2},{value:"Next steps",id:"next-steps",level:2}],c={toc:d},h="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(h,(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"For Reviewpad to work, it needs a configuration file called ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"reviewpad.yml"))," in the ",(0,a.kt)("strong",{parentName:"p"},"root")," of your repository."),(0,a.kt)("p",null,"This configuration is where you define the ",(0,a.kt)("strong",{parentName:"p"},"automations")," that Reviewpad will run on every pull request."),(0,a.kt)("p",null,"There are ",(0,a.kt)("strong",{parentName:"p"},"two ways")," to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," configuration file to your repository:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#accept-the-onboarding-pull-request"},"Accept the onboarding pull request")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#create-the-reviewpad-configuration-file-manually"},"Create the configuration file manually"))),(0,a.kt)("h2",{id:"accept-the-onboarding-pull-request"},"Accept the onboarding pull request"),(0,a.kt)("p",null,"After installing Reviewpad, an onboarding pull request is created in ",(0,a.kt)("strong",{parentName:"p"},"each")," repository where Reviewpad is installed."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"You can accept the onboarding pull request by merging it.")),(0,a.kt)("p",null,"By merging the onboarding pull request, the Reviewpad configuration file ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," is added to the root of your repository."),(0,a.kt)("p",null,"That's it! \ud83c\udf89"),(0,a.kt)("p",null,"You are ready to use Reviewpad to automate your pull request process."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Please note that you will need to merge the onboarding pull request for ",(0,a.kt)("strong",{parentName:"p"},"each")," repository where Reviewpad is installed.")),(0,a.kt)("h3",{id:"didnt-get-the-onboarding-pull-request"},"Didn't get the onboarding pull request?"),(0,a.kt)("p",null,"If you have a lot of repositories, it might take a while for Reviewpad to create the onboarding pull requests."),(0,a.kt)("p",null,"If you don't see an onboarding pull request after a few minutes, please ",(0,a.kt)("a",{parentName:"p",href:"#create-the-reviewpad-configuration-file-manually"},"create the Reviewpad configuration file manually"),"."),(0,a.kt)("p",null,"If you have any issues please reach us on our ",(0,a.kt)("a",{parentName:"p",href:"https://reviewpad.com/discord"},"community server"),"."),(0,a.kt)("h2",{id:"create-the-reviewpad-configuration-file-manually"},"Create the Reviewpad configuration file manually"),(0,a.kt)("p",null,"Create a file called ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," in the ",(0,a.kt)("strong",{parentName:"p"},"root")," of your repository and add the following content:"),(0,a.kt)(o.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},s),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Reviewpad Installation - Step 3",src:n(65148).Z,width:"2048",height:"1536"})),(0,a.kt)("p",null,"Do not forget to ",(0,a.kt)("strong",{parentName:"p"},"push")," the file to the repository."),(0,a.kt)("p",null,"That's it! \ud83c\udf89"),(0,a.kt)("p",null,"Reviewpad will run on every pull request and follow the workflows defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," configuration file."),(0,a.kt)("h2",{id:"next-steps"},"Next steps"),(0,a.kt)("p",null,"Now that you have configured Reviewpad you can start using it to automate your pull request process."),(0,a.kt)("p",null,"Have a look at our ",(0,a.kt)("a",{parentName:"p",href:"/guides/built-ins"},"built-ins")," and ",(0,a.kt)("a",{parentName:"p",href:"/use-cases"},"use cases")," to see how Reviewpad can help you."),(0,a.kt)("admonition",{title:"Terms and Conditions",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"By running Reviewpad, you are agreeing with ",(0,a.kt)("a",{parentName:"p",href:"https://reviewpad.com/terms-and-conditions/"},"Reviewpad's Terms and Conditions"),".")))}f.isMDXComponent=!0},65148:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/step3-e76e0a638105cbcc5b0ed1856c7dda65.gif"}}]);