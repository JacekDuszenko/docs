"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9720],{8985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=n(7462),a=(n(7294),n(3905)),i=n(814);const s={},l=void 0,p={unversionedId:"guides/built-ins/functions/group/index",id:"guides/built-ins/functions/group/index",title:"index",description:"",source:"@site/docs/guides/built-ins/functions/group/index.mdx",sourceDirName:"guides/built-ins/functions/group",slug:"/guides/built-ins/functions/group/",permalink:"/next/guides/built-ins/functions/group/",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/guides/built-ins/functions/group/index.mdx",tags:[],version:"current",frontMatter:{}},o={},u=[],d={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Description"),":"),(0,a.kt)("p",null,"Lists all the members that belong to the provided group. This group needs to be defined in the same ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," file."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"group")," is a way to refer to a defined set of users in a short way."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters"),":"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"group_name")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The group name to list all the members from.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return value"),":"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"[]string")),(0,a.kt)("td",{parentName:"tr",align:"left"},"All the members from the group.")))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Examples"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},'$group("techLeads")\n')),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," example:"),(0,a.kt)(i.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},'api-version: reviewpad.com/v3.x\r\n\r\ngroups:\r\n  - name: tech-leads\r\n    # The expression is wrapped in quotes to avoid YAML parsing errors\r\n    spec: \'["john", "maria", "arthur"]\'\r\n  - name: juniors\r\n    type: filter\r\n    param: developer\r\n    where: $pullRequestCountBy($developer, "all") < 10\r\n  - name: ignore_paths\r\n    # The expression is wrapped in quotes to avoid YAML parsing errors\r\n    spec: \'["engine/**", "*.yaml"]\'\r\n\r\nworkflows:\r\n  - name: label-with-size\r\n    if:\r\n      - $size($group("ignore_paths")) < 10\r\n    then:\r\n      - $addLabel("small")\r\n  - name: review-juniors-changes\r\n    if:\r\n      - $isElementOf($author(), $group("juniors"))\r\n    then:\r\n      - $assignReviewer($group("tech-leads"), 1)\r\n'))}m.isMDXComponent=!0}}]);