"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28080],{7879:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>m});var t=o(87462),i=(o(67294),o(3905));const s={title:"Enforce conventional commits",id:"enforce-conventional-commits"},c=void 0,a={unversionedId:"use-cases/enforce-conventional-commits",id:"version-3.8.0/use-cases/enforce-conventional-commits",title:"Enforce conventional commits",description:"Conventional commits is a specification for adding human and machine readable meaning to commit messages",source:"@site/versioned_docs/version-3.8.0/use-cases/enforce-conventional-commits.md",sourceDirName:"use-cases",slug:"/use-cases/enforce-conventional-commits",permalink:"/3.8.0/use-cases/enforce-conventional-commits",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/use-cases/enforce-conventional-commits.md",tags:[],version:"3.8.0",frontMatter:{title:"Enforce conventional commits",id:"enforce-conventional-commits"},sidebar:"DocsSidebar",previous:{title:"Enforce branch conventions",permalink:"/3.8.0/use-cases/enforce-branch-conventions"},next:{title:"Label pull requests with Git conflicts",permalink:"/3.8.0/use-cases/label-pull-requests-with-git-conflicts"}},r={},m=[{value:"Enforce conventional commits",id:"enforce-conventional-commits",level:2}],l={toc:m};function d(e){let{components:n,...o}=e;return(0,i.kt)("wrapper",(0,t.Z)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional commits")," is a specification for adding human and machine readable meaning to commit messages"),(0,i.kt)("p",null,"Reviewpad can be used to check and provide an error message if a commit in a pull request do not comply with the conventional commits specification."),(0,i.kt)("h2",{id:"enforce-conventional-commits"},"Enforce conventional commits"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"api-version: reviewpad.com/v3.x\n\nworkflows:\n  - name: lint-commits\n    description: Lint commit messages\n    if:\n      - rule: '!$hasLinearHistory()'\n        extra-actions:\n          - '$warn(\"This pull request does not have linear history - please fix this!\")'\n      - rule: 'true'\n        extra-actions:\n          - '$commitLint()'\n")))}d.isMDXComponent=!0}}]);