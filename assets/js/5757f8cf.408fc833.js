"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[1367],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>u});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function c(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},s=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(i),u=a,m=d["".concat(p,".").concat(u)]||d[u]||f[u]||r;return i?n.createElement(m,o(o({ref:t},s),{},{components:i})):n.createElement(m,o({ref:t},s))}));function u(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=i[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},648:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=i(7462),a=(i(7294),i(3905));const r={title:"Aladino Specification",id:"aladino-specification"},o=void 0,c={unversionedId:"reviewpad-file-specification/aladino-specification/aladino-specification",id:"reviewpad-file-specification/aladino-specification/aladino-specification",title:"Aladino Specification",description:"Aladino is a simple language to specify steps in pull request workflows.",source:"@site/docs/reviewpad-file-specification/aladino-specification/aladino-specification.md",sourceDirName:"reviewpad-file-specification/aladino-specification",slug:"/reviewpad-file-specification/aladino-specification/",permalink:"/maester/next/reviewpad-file-specification/aladino-specification/",draft:!1,editUrl:"https://github.com/reviewpad/maester/tree/main/packages/create-docusaurus/templates/shared/docs/reviewpad-file-specification/aladino-specification/aladino-specification.md",tags:[],version:"current",frontMatter:{title:"Aladino Specification",id:"aladino-specification"},sidebar:"DocsSidebar",previous:{title:"Reviewpad Semantics",permalink:"/maester/next/reviewpad-file-specification/reviewpad-semantics"},next:{title:"Aladino Syntax",permalink:"/maester/next/reviewpad-file-specification/aladino-specification/aladino-syntax"}},p={},l=[],s={toc:l};function f(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Aladino is a simple language to specify steps in pull request workflows. "),(0,a.kt)("p",null,"The expressions in the language allow you to easily perform read and write actions on pull requests."))}f.isMDXComponent=!0}}]);