"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[4721],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>g});var t=n(67294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},u=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},v=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),v=l(n),g=s,f=v["".concat(c,".").concat(g)]||v[g]||p[g]||i;return n?t.createElement(f,a(a({ref:r},u),{},{components:n})):t.createElement(f,a({ref:r},u))}));function g(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=v;var o={};for(var c in r)hasOwnProperty.call(r,c)&&(o[c]=r[c]);o.originalType=e,o.mdxType="string"==typeof e?e:s,a[1]=o;for(var l=2;l<i;l++)a[l]=n[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}v.displayName="MDXCreateElement"},88703:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=n(87462),s=(n(67294),n(3905));const i={title:"Assign reviewers in a sequence",id:"assign-sequential-reviewers",slug:"/use-cases/assign-sequential-reviewers"},a=void 0,o={unversionedId:"use-cases/reviewer-assignment/assign-sequential-reviewers",id:"version-3.7.0/use-cases/reviewer-assignment/assign-sequential-reviewers",title:"Assign reviewers in a sequence",description:"In certain cases, it is very useful to specify an order in which the pull request should be reviewed.",source:"@site/versioned_docs/version-3.7.0/use-cases/reviewer-assignment/assign-sequential-reviewers.md",sourceDirName:"use-cases/reviewer-assignment",slug:"/use-cases/assign-sequential-reviewers",permalink:"/3.7.0/use-cases/assign-sequential-reviewers",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/use-cases/reviewer-assignment/assign-sequential-reviewers.md",tags:[],version:"3.7.0",frontMatter:{title:"Assign reviewers in a sequence",id:"assign-sequential-reviewers",slug:"/use-cases/assign-sequential-reviewers"},sidebar:"DocsSidebar",previous:{title:"Assign senior reviewers to new joiners",permalink:"/3.7.0/use-cases/assign-senior-reviewers-to-new-joiners"},next:{title:"Ship/Show/Ask",permalink:"/3.7.0/use-cases/ship-show-ask"}},c={},l=[],u={toc:l};function p(e){let{components:r,...n}=e;return(0,s.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In certain cases, it is very useful to specify an order in which the pull request should be reviewed."),(0,s.kt)("p",null,"For example, the following configuration enforces that changes to files in the database migration files will be first reviewed\nby john and only when john approves the changes it will be reviewed by the security team."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'api-version: reviewpad.com/v3.x\n\npipelines:\n  - name: security-changes\n    trigger: $hasFilePattern("services/db/migrations/**")\n    stages:\n      - actions:\n          - \'$assignReviewer(["john"])\'\n        until: $reviewerStatus("john") == "APPROVED"\n      - actions:\n          - \'$assignTeamReviewer(["security"])\'\n')))}p.isMDXComponent=!0}}]);