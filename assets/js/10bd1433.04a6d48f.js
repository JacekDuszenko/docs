"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3502],{62219:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>m,default:()=>b,frontMatter:()=>p,metadata:()=>c,toc:()=>g});var r=a(87462),n=(a(67294),a(3905)),s=a(90814);const o='labels:\n  ship:\n    description: Ship mode\n    color: 76dbbe\n\nworkflows:\n  - name: ship\n    description: Ship process - bypass the review and merge with rebase\n    run:\n      if: $hasFileExtensions([".md"])\n      then:\n        - $addLabel("ship")\n        - $merge()\n',i='labels:\n  ship:\n    description: Ship mode\n    color: 76dbbe\n\ngroups:\n  - name: ignore-patterns\n    spec: \'["*.lock", "generated/**"]\'\n\nworkflows:\n  - name: ship\n    description: Ship process - bypass the review and merge with rebase\n    run:\n      if: $size($group("ignore-patterns")) < 90 && $fileCount() <= 5\n      then:\n        - $addLabel("ship")\n        - $merge("rebase")\n',l='labels:\n  ship:\n    description: Ship mode\n    color: 76dbbe\n\nworkflows:\n  - name: ship\n    description: Ship process - bypass the review and merge with rebase\n    run:\n      if: $hasAnnotation("critical") == false\n      then:\n        - $addLabel("ship")\n        - $merge("rebase")\n',u='workflows:\n  - name: auto-merge-on-required-approvals\n    run:\n      if: $hasAnnotation("critical") && $hasRequiredApprovals(2, $team("core"))\n      then: $merge()\n',p={title:"Auto-merge",id:"auto-merge",slug:"/use-cases/auto-merge"},m=void 0,c={unversionedId:"use-cases/auto-merge/auto-merge",id:"use-cases/auto-merge/auto-merge",title:"Auto-merge",description:"The ability to configure automatic pull request merge can greatly unblock developers that typically wait for hours, or even days, to receive a LGTM review.",source:"@site/docs/use-cases/auto-merge/index.mdx",sourceDirName:"use-cases/auto-merge",slug:"/use-cases/auto-merge",permalink:"/next/use-cases/auto-merge",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/use-cases/auto-merge/index.mdx",tags:[],version:"current",frontMatter:{title:"Auto-merge",id:"auto-merge",slug:"/use-cases/auto-merge"},sidebar:"DocsSidebar",previous:{title:"Use cases",permalink:"/next/use-cases"},next:{title:"Automated Labelling",permalink:"/next/use-cases/automated-labelling"}},d={},g=[{value:"Auto-merge based on file properties",id:"auto-merge-based-on-file-properties",level:2},{value:"Auto-merge small pull requests",id:"auto-merge-small-pull-requests",level:2},{value:"Auto-merge non-critical pull requests",id:"auto-merge-non-critical-pull-requests",level:2},{value:"Auto-merge on required approvals",id:"auto-merge-on-required-approvals",level:2}],h={toc:g},f="wrapper";function b(e){let{components:t,...a}=e;return(0,n.kt)(f,(0,r.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The ability to configure automatic pull request merge can greatly unblock developers that typically wait for hours, or even days, to receive a LGTM review."),(0,n.kt)("p",null,"Since not every pull request needs the same review process, using the semantic features of Reviewpad, you can configure many scenarios where auto-merge seems natural."),(0,n.kt)("p",null,"Out of the box, Reviewpad supports a ",(0,n.kt)("a",{parentName:"p",href:"/guides/built-ins#merge"},"merge action")," which can be used in multiple scenarios."),(0,n.kt)("h2",{id:"auto-merge-based-on-file-properties"},"Auto-merge based on file properties"),(0,n.kt)(s.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},o),(0,n.kt)("h2",{id:"auto-merge-small-pull-requests"},"Auto-merge small pull requests"),(0,n.kt)(s.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},i),(0,n.kt)("h2",{id:"auto-merge-non-critical-pull-requests"},"Auto-merge non-critical pull requests"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/guides/built-ins#hasannotation"},(0,n.kt)("strong",{parentName:"a"},"hasAnnotation"))," built-in can be used to configure powerful auto-merges. See a more in-depth example of the usage of ",(0,n.kt)("a",{parentName:"p",href:"/guides/built-ins#hasannotation"},(0,n.kt)("strong",{parentName:"a"},"hasAnnotation"))," in the ",(0,n.kt)("a",{parentName:"p",href:"/use-cases/label-critical-changes-with-semantic-code-annotations"},"automated labelling section"),"."),(0,n.kt)(s.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},l),(0,n.kt)("h2",{id:"auto-merge-on-required-approvals"},"Auto-merge on required approvals"),(0,n.kt)("p",null,"In GitHub, repository administrators can require a minimum number of pull request approvals before merging into a protected branch."),(0,n.kt)("p",null,"However, we may want the required number of approvals to come from a defined set of users/team. In this case, GitHub does not offer this ability."),(0,n.kt)("p",null,"We can use Reviewpad to verify if a pull request has the required number of approvals from a specific team."),(0,n.kt)("p",null,"Here's an example of a ",(0,n.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," configuration that verifies if a pull request has at least 2 approvals from the core team when changes are critical."),(0,n.kt)(s.Z,{language:"yml",title:"reviewpad.yml",mdxType:"CodeBlock"},u))}b.isMDXComponent=!0}}]);