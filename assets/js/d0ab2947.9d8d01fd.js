"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[2848],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),c=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=c(n),m=a,d=f["".concat(o,".").concat(m)]||f[m]||u[m]||i;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={title:"Label pull requests with Git conflicts",id:"label-pull-requests-with-git-conflicts"},l=void 0,s={unversionedId:"use-cases/label-pull-requests-with-git-conflicts",id:"version-3.8.0/use-cases/label-pull-requests-with-git-conflicts",title:"Label pull requests with Git conflicts",description:"It can be tiresome to open a pull request and realize that it has Git conflicts.",source:"@site/versioned_docs/version-3.8.0/use-cases/label-pull-requests-with-git-conflicts.md",sourceDirName:"use-cases",slug:"/use-cases/label-pull-requests-with-git-conflicts",permalink:"/use-cases/label-pull-requests-with-git-conflicts",draft:!1,editUrl:"https://github.com/reviewpad/docs/tree/main/docs/use-cases/label-pull-requests-with-git-conflicts.md",tags:[],version:"3.8.0",frontMatter:{title:"Label pull requests with Git conflicts",id:"label-pull-requests-with-git-conflicts"},sidebar:"DocsSidebar",previous:{title:"Enforce conventional commits",permalink:"/use-cases/enforce-conventional-commits"},next:{title:"Reviewer Assignment",permalink:"/use-cases/reviewer-assignment"}},o={},c=[{value:"Reviewpad Action",id:"reviewpad-action",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"It can be tiresome to open a pull request and realize that it has Git conflicts."),(0,a.kt)("p",null,"Here's an example of a ",(0,a.kt)("inlineCode",{parentName:"p"},"reviewpad.yml")," configuration file that labels pull requests that have Git conflicts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"reviewpad.yml","reviewpad.yml":!0},"api-version: reviewpad.com/v3.x\n\nworkflows:\n  - name: label-pull-requests-with-git-conflicts\n    if:\n      - '$hasGitConflicts()'\n    then:\n      - '$addLabel(\"conflicts\")'\n")),(0,a.kt)("h2",{id:"reviewpad-action"},"Reviewpad Action"),(0,a.kt)("p",null,"In order to have the automation for the labelling of pull requests that have Git conflicts we can use the following ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/reviewpad-action"},"reviewpad action")," configuration that will be triggered whenever there is a push to the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"reviewpad.yml","reviewpad.yml":!0},"name: Reviewpad\n\non:\n  push:\n    branches:\n       - main\n\njobs:\n  reviewpad:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Reviewpad\n        uses: reviewpad/action@v3.x\n")))}u.isMDXComponent=!0}}]);