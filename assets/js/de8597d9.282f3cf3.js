"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[8492],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>m});var n=t(7294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,v=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(v,s(s({ref:r},p),{},{components:t})):n.createElement(v,s({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=d;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6933:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=t(7462),i=(t(7294),t(3905));const a={title:"Reviewer Assignment",id:"reviewer-assignment"},s=void 0,o={unversionedId:"use-cases/reviewer-assignment/reviewer-assignment",id:"version-3.0.1/use-cases/reviewer-assignment/reviewer-assignment",title:"Reviewer Assignment",description:"GitHub already provides code reviewer suggestions and the ability to use CODEOWNERS to automatically assign reviewers.",source:"@site/versioned_docs/version-3.0.1/use-cases/reviewer-assignment/reviewer-assignment.md",sourceDirName:"use-cases/reviewer-assignment",slug:"/use-cases/reviewer-assignment/",permalink:"/use-cases/reviewer-assignment/",draft:!1,editUrl:"https://github.com/reviewpad/maester/tree/main/versioned_docs/version-3.0.1/use-cases/reviewer-assignment/reviewer-assignment.md",tags:[],version:"3.0.1",frontMatter:{title:"Reviewer Assignment",id:"reviewer-assignment"},sidebar:"DocsSidebar",previous:{title:"Remove label based on file paths",permalink:"/use-cases/automated-labelling/remove-label-based-on-file-paths"},next:{title:"Assign senior reviewers to new joiners",permalink:"/use-cases/reviewer-assignment/assign-senior-reviewers-to-new-joiners"}},l={},c=[],p={toc:c};function u(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"GitHub already provides code reviewer suggestions and the ability to use CODEOWNERS to automatically assign reviewers."),(0,i.kt)("p",null,"However, the code reviewer suggestion is still a manual process for developers and the CODEOWNERS feature is very limited:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"You associate owners to files. For simple changes in those files or large files, CODEOWNERS can be extremely noisy. ",(0,i.kt)("inlineCode",{parentName:"li"},"reviewpad.yml")," files allow you to specify ownership at the semantic level and also based on the nature of the changes."),(0,i.kt)("li",{parentName:"ol"},"There can only have a CODEOWNERS file per repository; as opposed, ",(0,i.kt)("inlineCode",{parentName:"li"},"reviewpad.yml")," files will be extensible and you will be able to import central configuration files."),(0,i.kt)("li",{parentName:"ol"},"Rules have precedence, so you need to understand the context of previous rules for a given rule. Reviewpad workflows allow you to specify when a ",(0,i.kt)("a",{parentName:"li",href:"/reviewpad-file-specification/reviewpad-syntax#workflow"},"workflow should always be")," considered regardless of the context.")),(0,i.kt)("p",null,"Out of the box, Reviewpad supports two actions to assign reviewers, ",(0,i.kt)("a",{parentName:"p",href:"/reviewpad-file-specification/aladino-specification/aladino-built-ins#assignreviewer"},"assignReviewer")," and ",(0,i.kt)("a",{parentName:"p",href:"/reviewpad-file-specification/aladino-specification/aladino-built-ins#assignrandomreviewer"},"assignRandomReviewer"),"."))}u.isMDXComponent=!0}}]);