"use strict";(self.webpackChunkmaester=self.webpackChunkmaester||[]).push([[1367],{3905:(e,i,t)=>{t.d(i,{Zo:()=>s,kt:()=>u});var n=t(7294);function a(e,i,t){return i in e?Object.defineProperty(e,i,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[i]=t,e}function r(e,i){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);i&&(n=n.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var i=1;i<arguments.length;i++){var t=null!=arguments[i]?arguments[i]:{};i%2?r(Object(t),!0).forEach((function(i){a(e,i,t[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))}))}return e}function c(e,i){if(null==e)return{};var t,n,a=function(e,i){if(null==e)return{};var t,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],i.indexOf(t)>=0||(a[t]=e[t]);return a}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],i.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var i=n.useContext(l),t=i;return e&&(t="function"==typeof e?e(i):o(o({},i),e)),t},s=function(e){var i=p(e.components);return n.createElement(l.Provider,{value:i},e.children)},f={inlineCode:"code",wrapper:function(e){var i=e.children;return n.createElement(n.Fragment,{},i)}},d=n.forwardRef((function(e,i){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),u=a,m=d["".concat(l,".").concat(u)]||d[u]||f[u]||r;return t?n.createElement(m,o(o({ref:i},s),{},{components:t})):n.createElement(m,o({ref:i},s))}));function u(e,i){var t=arguments,a=i&&i.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=d;var c={};for(var l in i)hasOwnProperty.call(i,l)&&(c[l]=i[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<r;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},648:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var n=t(7462),a=(t(7294),t(3905));const r={title:"Aladino Specification",id:"aladino-specification"},o=void 0,c={unversionedId:"reviewpad-file-specification/aladino-specification/aladino-specification",id:"reviewpad-file-specification/aladino-specification/aladino-specification",title:"Aladino Specification",description:"Aladino is a simple language to specify steps in pull request workflows.",source:"@site/docs/reviewpad-file-specification/aladino-specification/aladino-specification.md",sourceDirName:"reviewpad-file-specification/aladino-specification",slug:"/reviewpad-file-specification/aladino-specification/",permalink:"/docs/next/reviewpad-file-specification/aladino-specification/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reviewpad-file-specification/aladino-specification/aladino-specification.md",tags:[],version:"current",frontMatter:{title:"Aladino Specification",id:"aladino-specification"},sidebar:"DocsSidebar",previous:{title:"Reviewpad Semantics",permalink:"/docs/next/reviewpad-file-specification/reviewpad-semantics"},next:{title:"Aladino Syntax",permalink:"/docs/next/reviewpad-file-specification/aladino-specification/aladino-syntax"}},l={},p=[],s={toc:p};function f(e){let{components:i,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:i,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Aladino is a simple language to specify steps in pull request workflows. "),(0,a.kt)("p",null,"The expressions in the language allow you to easily perform read and write actions on pull requests."))}f.isMDXComponent=!0}}]);